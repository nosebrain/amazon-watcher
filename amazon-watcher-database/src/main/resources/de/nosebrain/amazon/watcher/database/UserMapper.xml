<?xml version="1.0" encoding="UTF-8" ?> <!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="de.nosebrain.amazon.watcher.database.UserMapper">

	<resultMap type="User" id="userResult">
		<id 	column="name"		property="name"		javaType="string" />
		<result column="mail"		property="mail"		javaType="string" />
		<result column="role"		property="role"		javaType="Role" />
		<association property="settings"	javaType="UserSettings">
			<result 	column="min_delta"		property="minDelta" 	javaType="float" />
			<result 	column="language"		property="language"		javaType="Locale"/>
			<result		column="item_view_mode" property="viewMode" 	javaType="ItemViewMode" />
			<collection	property="infoServices" resultMap="infoServiceResult" />
		</association>
	</resultMap>
	
	<resultMap type="User" id="fullUserResult" extends="userResult">
		<collection property="authorities">
		    <discriminator javaType="int" column="kind">
				<case value="1" resultMap="passwordAuthority" />
			</discriminator>
		</collection>
	</resultMap>
	
	<resultMap type="InfoService" id="infoServiceResult">
		<id			column="hash"				property="hash" />
		<result		column="info_service_id"	property="infoServiceKey" />
		<result		column="settings"			property="settings" />
	</resultMap>
	
	<resultMap type="PasswordAuthority" id="passwordAuthority">
		<result	column="info"		property="password" />
	</resultMap>
	
	<sql id="userAttributes">
		u.name, u.role, u.mail, u.min_delta, u.language, u.item_view_mode
	</sql>
	
	<sql id="infoServiceAttributes">
	    i.info_service_id, i.settings, i.hash
	</sql>
	
	<select id="getUserByName" resultMap="fullUserResult" parameterType="string">
		SELECT <include refid="userAttributes" />, <include refid="infoServiceAttributes" />, a.kind, a.info
			FROM users u
			LEFT JOIN information_services i ON (u.name = i.user_name)
			LEFT JOIN authorities a ON (u.name = a.user_name)
			WHERE u.name = #{userName}
	</select>
	
	<insert id="insertUser" parameterType="User">
		INSERT INTO users (name, mail, role) VALUES (#{name}, #{mail}, #{role})
	</insert>
	
	<insert id="insertAuthority" parameterType="Authority">
	    INSERT INTO authorities (user_name, kind, info) VALUES (#{userName},
	    <choose>
	        <when test="authority.class.simpleName == 'PasswordAuthority'">	    
	     		1, #{authority.password}
	        </when>
	    </choose>
	    )	    
	</insert>
	
	<delete id="deleteUser" parameterType="string">
		DELETE
			FROM users u
			WHERE u.name = #{name}
	</delete>
	
	<select id="getInfoServiceByHash" resultMap="infoServiceResult">
	    SELECT <include refid="infoServiceAttributes" />
	    	FROM information_services i
	    	WHERE user_name = #{userName} AND hash = #{hash}
	</select>
	
	<insert id="insertInfoService">
	    INSERT INTO information_services (user_name, info_service_id, settings, hash)
	    VALUES (
	    #{userName},
	    #{infoService.infoServiceKey},
	    #{infoService.settings},
	    #{infoService.hash}
	    )
	</insert>
</mapper>