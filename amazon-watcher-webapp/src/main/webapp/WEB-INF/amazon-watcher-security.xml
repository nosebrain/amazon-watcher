<beans xmlns="http://www.springframework.org/schema/beans"  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:util="http://www.springframework.org/schema/util"
	xmlns:security="http://www.springframework.org/schema/security"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
						http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
						http://www.springframework.org/schema/security 
						http://www.springframework.org/schema/security/spring-security-3.1.xsd
						http://www.springframework.org/schema/util 
	                    http://www.springframework.org/schema/util/spring-util-3.0.xsd">
	
	<security:global-method-security pre-post-annotations="enabled"/>
	<!-- static resources -->
	<security:http pattern="/assets/**" security="none" />
	           	
	<security:http use-expressions="true" entry-point-ref="entryPoint" auto-config="false" security-context-repository-ref="contextRepository">		
		<security:intercept-url pattern="/login**" access="isAnonymous()" />
		<security:intercept-url pattern="/register" access="isAnonymous()" />
		
		<!-- restrict admin pages to admins -->
		<security:intercept-url pattern="/admin/**" access="hasRole('ADMIN')" />
		<!-- everything else -->
		<security:intercept-url pattern="/" access="permitAll" />
		<security:intercept-url pattern="/index.*" access="permitAll" />
		<security:intercept-url pattern="/**" access="isAuthenticated()" />
		
		<security:custom-filter ref="form-login" position="FORM_LOGIN_FILTER"/>
		<security:remember-me services-ref="rememberMeService" key="${general.key}" />
		
		<security:http-basic />
		
		<security:logout logout-url="/logout" logout-success-url="/" />
	</security:http>
	
	<security:authentication-manager alias="internalAuthenticationManager">
		<security:authentication-provider ref="databaseAuthenticator" />
		<security:authentication-provider ref="databaseAPIAuthenticator" />
	</security:authentication-manager>
	
	<bean id="loginUrl" class="java.lang.String">
		<constructor-arg value="/login" />
	</bean>
	
	<bean id="targetUrlParameter" class="java.lang.String">
		<constructor-arg value="referer" />
	</bean>
	
	<bean id="form-login" class="org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter">
		<property name="rememberMeServices" ref="rememberMeService" />
		<property name="filterProcessesUrl" value="/login_internal" />
		<property name="authenticationManager" ref="internalAuthenticationManager" />
		<property name="authenticationFailureHandler" ref="failureHandler" />
		<property name="authenticationSuccessHandler" ref="successHandler" />
		<property name="usernameParameter" value="name" />
		<property name="passwordParameter" value="secret" />
	</bean>
	
	<bean id="successHandler" class="org.springframework.security.web.authentication.SavedRequestAwareAuthenticationSuccessHandler">
		<property name="targetUrlParameter" ref="targetUrlParameter" />
	</bean>
	
	<bean id="failureHandler" class="org.springframework.security.web.authentication.SimpleUrlAuthenticationFailureHandler">
		<property name="defaultFailureUrl" ref="loginUrl" />
	</bean>
	
	<bean id="databaseUserService" class="de.nosebrain.amazon.watcher.webapp.util.spring.security.DatabaseAdapter">
		<property name="adminService" ref="adminDatabaseLogic" />
	</bean>
	
	<bean id="databaseUserAPIService" class="de.nosebrain.amazon.watcher.webapp.util.spring.security.DatabaseAdapterAPI">
	    <property name="adminService" ref="adminDatabaseLogic" />	    
	</bean>
	
	<bean id="contextRepository" class="de.nosebrain.spring.security.UsernameContextRepository">
		<property name="service" ref="databaseUserService" />
	</bean>
	
	<bean id="databaseAPIAuthenticator" class="org.springframework.security.authentication.dao.DaoAuthenticationProvider">
		<property name="userDetailsService" ref="databaseUserService" />
	</bean>
	
	<bean id="databaseAuthenticator" class="org.springframework.security.authentication.dao.DaoAuthenticationProvider">
		<property name="userDetailsService" ref="databaseUserService" />
		<property name="passwordEncoder">
			<bean class="org.springframework.security.authentication.encoding.Md5PasswordEncoder" />
		</property>
	</bean>
	
	<bean id="entryPoint" class="org.springframework.security.web.authentication.LoginUrlAuthenticationEntryPoint">
		<property name="loginFormUrl" ref="loginUrl" />
	</bean>
	
	<bean id="rememberMeService" class="org.springframework.security.web.authentication.rememberme.TokenBasedRememberMeServices">
	    <constructor-arg value="${general.key}" />
	    <constructor-arg ref="databaseUserService" />
	    <property name="alwaysRemember" value="true" />
	    <property name="cookieName" value="user" />
	</bean>
</beans>